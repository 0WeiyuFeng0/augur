<?xml version="1.0" encoding="UTF-8"?>
<svg width="1462px" height="289px" viewBox="0 0 1462 289" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- Generator: Sketch 41.2 (35397) - http://www.bohemiancoding.com/sketch -->
    <title>Wordmark</title>
    <desc>Created with Sketch.</desc>
    <defs>
        <circle id="path-1" cx="144.5" cy="144.5" r="144.5"></circle>
        <filter x="-50%" y="-50%" width="200%" height="200%" filterUnits="objectBoundingBox" id="filter-3">
            <feGaussianBlur stdDeviation="7.5" in="SourceAlpha" result="shadowBlurInner1"></feGaussianBlur>
            <feOffset dx="3" dy="3" in="shadowBlurInner1" result="shadowOffsetInner1"></feOffset>
            <feComposite in="shadowOffsetInner1" in2="SourceAlpha" operator="arithmetic" k2="-1" k3="1" result="shadowInnerInner1"></feComposite>
            <feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0" type="matrix" in="shadowInnerInner1"></feColorMatrix>
        </filter>
    </defs>
    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="Wordmark" transform="translate(0.000000, -1.000000)">
            <g id="Logo" transform="translate(0.000000, 1.000000)">
                <g id="#SPDX-License-Identi">
                    <mask id="mask-2" fill="white">
                        <use xlink:href="#path-1"></use>
                    </mask>
                    <g id="Mask">
                        <use fill="#2C2C2C" fill-rule="evenodd" xlink:href="#path-1"></use>
                        <use fill="black" fill-opacity="1" filter="url(#filter-3)" xlink:href="#path-1"></use>
                    </g>
                    <text mask="url(#mask-2)" font-family="Hack-Bold, Hack" font-size="3" font-weight="bold" fill="#7EE32C">
                        <tspan x="7" y="-6">#SPDX-License-Identifier: MIT</tspan>
                        <tspan x="7" y="-2">import ghdata</tspan>
                        <tspan x="7" y="2"></tspan>
                        <tspan x="7" y="6">import os</tspan>
                        <tspan x="7" y="10">import sys</tspan>
                        <tspan x="7" y="14">if (sys.version_info &gt; (3, 0)):</tspan>
                        <tspan x="7" y="18">    import configparser as configparser</tspan>
                        <tspan x="7" y="22">else:</tspan>
                        <tspan x="7" y="26">    import ConfigParser as configparser</tspan>
                        <tspan x="7" y="30"></tspan>
                        <tspan x="7" y="34">from flask import Flask, request, Response, send_from_directory</tspan>
                        <tspan x="7" y="38">from flask_cors import CORS</tspan>
                        <tspan x="7" y="42"></tspan>
                        <tspan x="7" y="46">GHDATA_API_VERSION = 'unstable'</tspan>
                        <tspan x="7" y="50"></tspan>
                        <tspan x="7" y="54">def serialize(func, **args):</tspan>
                        <tspan x="7" y="58">    """</tspan>
                        <tspan x="7" y="62">    Serailizes a function that returns a dataframe</tspan>
                        <tspan x="7" y="66">    """</tspan>
                        <tspan x="7" y="70">    data = func(**args)</tspan>
                        <tspan x="7" y="74">    if hasattr(data, 'to_json'):</tspan>
                        <tspan x="7" y="78">        return data.to_json(orient='records', date_format='iso', date_unit='ms')</tspan>
                        <tspan x="7" y="82">    else:</tspan>
                        <tspan x="7" y="86">        return data</tspan>
                        <tspan x="7" y="90"></tspan>
                        <tspan x="7" y="94"></tspan>
                        <tspan x="7" y="98">def flaskify_ghtorrent(ghtorrent, func):</tspan>
                        <tspan x="7" y="102">    """</tspan>
                        <tspan x="7" y="106">    Simplifies API endpoints that just accept owner and repo,</tspan>
                        <tspan x="7" y="110">    serializes them and spits them out</tspan>
                        <tspan x="7" y="114">    """</tspan>
                        <tspan x="7" y="118">    def generated_function(owner, repo):</tspan>
                        <tspan x="7" y="122">        repoid = ghtorrent.repoid(owner=owner, repo=repo)</tspan>
                        <tspan x="7" y="126">        return Response(response=serialize(func, repoid=repoid),</tspan>
                        <tspan x="7" y="130">                        status=200,</tspan>
                        <tspan x="7" y="134">                        mimetype="application/json")</tspan>
                        <tspan x="7" y="138">    generated_function.__name__ = func.__name__</tspan>
                        <tspan x="7" y="142">    return generated_function</tspan>
                        <tspan x="7" y="146"></tspan>
                        <tspan x="7" y="150">def flaskify(func):</tspan>
                        <tspan x="7" y="154">    """</tspan>
                        <tspan x="7" y="158">    Simplifies API endpoints that just accept owner and repo,</tspan>
                        <tspan x="7" y="162">    serializes them and spits them out</tspan>
                        <tspan x="7" y="166">    """</tspan>
                        <tspan x="7" y="170">    def generated_function(owner, repo):</tspan>
                        <tspan x="7" y="174">        return Response(response=serialize(func, owner=owner, repo=repo),</tspan>
                        <tspan x="7" y="178">                        status=200,</tspan>
                        <tspan x="7" y="182">                        mimetype="application/json")</tspan>
                        <tspan x="7" y="186">    generated_function.__name__ = func.__name__</tspan>
                        <tspan x="7" y="190">    return generated_function</tspan>
                        <tspan x="7" y="194"></tspan>
                        <tspan x="7" y="198">def read_config(parser, section, name, environment_variable, default):</tspan>
                        <tspan x="7" y="202">    try:</tspan>
                        <tspan x="7" y="206">        value = os.getenv(environment_variable, parser.get(section, name))</tspan>
                        <tspan x="7" y="210">        return value</tspan>
                        <tspan x="7" y="214">    except:</tspan>
                        <tspan x="7" y="218">        if not parser.has_section(section):</tspan>
                        <tspan x="7" y="222">            parser.add_section(section)</tspan>
                        <tspan x="7" y="226">        parser.set(section, name, default)</tspan>
                        <tspan x="7" y="230">        with open('ghdata.cfg', 'w') as configfile:</tspan>
                        <tspan x="7" y="234">            parser.write(configfile)</tspan>
                        <tspan x="7" y="238">        return default</tspan>
                        <tspan x="7" y="242"></tspan>
                        <tspan x="7" y="246"></tspan>
                        <tspan x="7" y="250">def run(): </tspan>
                        <tspan x="7" y="254"></tspan>
                        <tspan x="7" y="258">    app = Flask(__name__, static_url_path=os.path.abspath('static/'))</tspan>
                        <tspan x="7" y="262">    CORS(app)</tspan>
                        <tspan x="7" y="266">    # Try to open the config file and parse it</tspan>
                        <tspan x="7" y="270">    parser = configparser.RawConfigParser()</tspan>
                        <tspan x="7" y="274">    parser.read('ghdata.cfg')</tspan>
                        <tspan x="7" y="278"></tspan>
                        <tspan x="7" y="282">    try:</tspan>
                        <tspan x="7" y="286">        dbstr = 'mysql+pymysql://{}:{}@{}:{}/{}'.format(</tspan>
                        <tspan x="7" y="290">            read_config(parser, 'Database', 'user', 'GHDATA_DB_USER', 'root'),</tspan>
                        <tspan x="7" y="294">            read_config(parser, 'Database', 'pass', 'GHDATA_DB_PASS', 'password'),</tspan>
                        <tspan x="7" y="298">            read_config(parser, 'Database', 'host', 'GHDATA_DB_HOST', '127.0.0.1'),</tspan>
                        <tspan x="7" y="302">            read_config(parser, 'Database', 'port', 'GHDATA_DB_PORT', '3306'),</tspan>
                        <tspan x="7" y="306">            read_config(parser, 'Database', 'name', 'GHDATA_DB_NAME', 'msr14')</tspan>
                        <tspan x="7" y="310">        )</tspan>
                        <tspan x="7" y="314">        print("Connecting with " + dbstr)</tspan>
                        <tspan x="7" y="318">        ghtorrent = ghdata.GHTorrent(dbstr=dbstr)</tspan>
                        <tspan x="7" y="322">    except Exception as e:</tspan>
                        <tspan x="7" y="326">        print("Failed to connect to database (" + str(e) + ")");</tspan>
                        <tspan x="7" y="330"></tspan>
                        <tspan x="7" y="334">    host = read_config(parser, 'Server', 'host', 'GHDATA_HOST', '0.0.0.0')</tspan>
                        <tspan x="7" y="338">    port = read_config(parser, 'Server', 'port', 'GHDATA_PORT', '5000')</tspan>
                        <tspan x="7" y="342"></tspan>
                        <tspan x="7" y="346">    publicwww = ghdata.PublicWWW(api_key=read_config(parser, 'PublicWWW', 'APIKey', 'GHDATA_PUBLIC_WWW_API_KEY', 'None'))</tspan>
                        <tspan x="7" y="350">    github = ghdata.GitHubAPI(api_key=read_config(parser, 'GitHub', 'APIKey', 'GHDATA_GITHUB_API_KEY', 'None'))</tspan>
                        <tspan x="7" y="354"></tspan>
                        <tspan x="7" y="358">    if (read_config(parser, 'Development', 'developer', 'GHDATA_DEBUG', '0') == '1'):</tspan>
                        <tspan x="7" y="362">        debugmode = True</tspan>
                        <tspan x="7" y="366">    else:</tspan>
                        <tspan x="7" y="370">        debugmode = False</tspan>
                        <tspan x="7" y="374"></tspan>
                        <tspan x="7" y="378"></tspan>
                        <tspan x="7" y="382"></tspan>
                        <tspan x="7" y="386">    """</tspan>
                        <tspan x="7" y="390">    @api {get} / API Status</tspan>
                        <tspan x="7" y="394">    @apiName Status</tspan>
                        <tspan x="7" y="398">    @apiGroup Misc</tspan>
                        <tspan x="7" y="402">    """</tspan>
                        <tspan x="7" y="406">    @app.route('/{}/'.format(GHDATA_API_VERSION))</tspan>
                        <tspan x="7" y="410">    def api_root():</tspan>
                        <tspan x="7" y="414">        """API status"""</tspan>
                        <tspan x="7" y="418">        # @todo: When we support multiple data sources this should keep track of their status</tspan>
                        <tspan x="7" y="422">        # @todo: Add GHTorrent test to determine status</tspan>
                        <tspan x="7" y="426">        ghtorrent_status = "good"</tspan>
                        <tspan x="7" y="430">        # @todo: Add GitHub API status</tspan>
                        <tspan x="7" y="434">        # @todo: Add PublicWWW API status</tspan>
                        <tspan x="7" y="438">        return """{"status": "healthy", "ghtorrent": "{}"}""".format(ghtorrent_status)</tspan>
                        <tspan x="7" y="442"></tspan>
                        <tspan x="7" y="446">    #######################</tspan>
                        <tspan x="7" y="450">    #     Timeseries      #</tspan>
                        <tspan x="7" y="454">    #######################</tspan>
                        <tspan x="7" y="458"></tspan>
                        <tspan x="7" y="462">    # @todo: Link to LF Metrics</tspan>
                        <tspan x="7" y="466"></tspan>
                        <tspan x="7" y="470">    """</tspan>
                        <tspan x="7" y="474">    @api {get} /:owner/:repo/commits Commits by Week</tspan>
                        <tspan x="7" y="478">    @apiName CommitsByWeek</tspan>
                        <tspan x="7" y="482">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="486"></tspan>
                        <tspan x="7" y="490">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="494">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="498"></tspan>
                        <tspan x="7" y="502">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="506">                        [</tspan>
                        <tspan x="7" y="510">                            {</tspan>
                        <tspan x="7" y="514">                                "date": "2015-01-01T00:00:00.000Z",</tspan>
                        <tspan x="7" y="518">                                "commits": 153</tspan>
                        <tspan x="7" y="522">                            },</tspan>
                        <tspan x="7" y="526">                            {</tspan>
                        <tspan x="7" y="530">                                "date": "2015-01-08T00:00:00.000Z",</tspan>
                        <tspan x="7" y="534">                                "commits": 192</tspan>
                        <tspan x="7" y="538">                            }</tspan>
                        <tspan x="7" y="542">                        ]</tspan>
                        <tspan x="7" y="546">    """</tspan>
                        <tspan x="7" y="550">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/timeseries/commits'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="554">        flaskify_ghtorrent(ghtorrent, ghtorrent.commits))</tspan>
                        <tspan x="7" y="558"></tspan>
                        <tspan x="7" y="562">    """</tspan>
                        <tspan x="7" y="566">    @api {get} /:owner/:repo/forks Forks by Week</tspan>
                        <tspan x="7" y="570">    @apiName ForksByWeek</tspan>
                        <tspan x="7" y="574">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="578"></tspan>
                        <tspan x="7" y="582">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="586">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="590"></tspan>
                        <tspan x="7" y="594">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="598">                        [</tspan>
                        <tspan x="7" y="602">                            {</tspan>
                        <tspan x="7" y="606">                                "date": "2015-01-01T00:00:00.000Z",</tspan>
                        <tspan x="7" y="610">                                "forks": 13</tspan>
                        <tspan x="7" y="614">                            },</tspan>
                        <tspan x="7" y="618">                            {</tspan>
                        <tspan x="7" y="622">                                "date": "2015-01-08T00:00:00.000Z",</tspan>
                        <tspan x="7" y="626">                                "forks": 12</tspan>
                        <tspan x="7" y="630">                            }</tspan>
                        <tspan x="7" y="634">                        ]</tspan>
                        <tspan x="7" y="638">    """</tspan>
                        <tspan x="7" y="642">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/timeseries/forks'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="646">        flaskify_ghtorrent(ghtorrent, ghtorrent.forks))</tspan>
                        <tspan x="7" y="650"></tspan>
                        <tspan x="7" y="654">    """</tspan>
                        <tspan x="7" y="658">    @api {get} /:owner/:repo/issues Issues by Week</tspan>
                        <tspan x="7" y="662">    @apiName IssuesByWeek</tspan>
                        <tspan x="7" y="666">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="670"></tspan>
                        <tspan x="7" y="674">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="678">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="682"></tspan>
                        <tspan x="7" y="686">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="690">                        [</tspan>
                        <tspan x="7" y="694">                            {</tspan>
                        <tspan x="7" y="698">                                "date": "2015-01-01T00:00:00.000Z",</tspan>
                        <tspan x="7" y="702">                                "issues":13</tspan>
                        <tspan x="7" y="706">                            },</tspan>
                        <tspan x="7" y="710">                            {</tspan>
                        <tspan x="7" y="714">                                "date": "2015-01-08T00:00:00.000Z",</tspan>
                        <tspan x="7" y="718">                                "issues":15</tspan>
                        <tspan x="7" y="722">                            }</tspan>
                        <tspan x="7" y="726">                        ]</tspan>
                        <tspan x="7" y="730">    """</tspan>
                        <tspan x="7" y="734">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/timeseries/issues'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="738">        flaskify_ghtorrent(ghtorrent, ghtorrent.issues))</tspan>
                        <tspan x="7" y="742"></tspan>
                        <tspan x="7" y="746">    """</tspan>
                        <tspan x="7" y="750">    @api {get} /:owner/:repo/issues/response_time Issue Response Time</tspan>
                        <tspan x="7" y="754">    @apiName IssueResponseTime</tspan>
                        <tspan x="7" y="758">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="762"></tspan>
                        <tspan x="7" y="766">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="770">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="774"></tspan>
                        <tspan x="7" y="778">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="782">                        [</tspan>
                        <tspan x="7" y="786">                            {</tspan>
                        <tspan x="7" y="790">                                "created_at": "2013-09-16T17:00:54.000Z",</tspan>
                        <tspan x="7" y="794">                                "responded_at": "2013-09-16T17:20:58.000Z"</tspan>
                        <tspan x="7" y="798">                            },</tspan>
                        <tspan x="7" y="802">                            {</tspan>
                        <tspan x="7" y="806">                                "created_at": "2013-09-16T09:31:34.000Z",</tspan>
                        <tspan x="7" y="810">                                "responded_at": "2013-09-16T09:43:03.000Z"</tspan>
                        <tspan x="7" y="814">                            }</tspan>
                        <tspan x="7" y="818">                        ]</tspan>
                        <tspan x="7" y="822">    """</tspan>
                        <tspan x="7" y="826">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/timeseries/issues/response_time'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="830">        flaskify_ghtorrent(ghtorrent, ghtorrent.issue_response_time))</tspan>
                        <tspan x="7" y="834"></tspan>
                        <tspan x="7" y="838">    """</tspan>
                        <tspan x="7" y="842">    @api {get} /:owner/:repo/pulls Pull Requests by Week</tspan>
                        <tspan x="7" y="846">    @apiName PullRequestsByWeek</tspan>
                        <tspan x="7" y="850">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="854"></tspan>
                        <tspan x="7" y="858">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="862">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="866"></tspan>
                        <tspan x="7" y="870">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="874">                        [</tspan>
                        <tspan x="7" y="878">                            {</tspan>
                        <tspan x="7" y="882">                                "date": "2015-01-01T00:00:00.000Z",</tspan>
                        <tspan x="7" y="886">                                "pull_requests": 1</tspan>
                        <tspan x="7" y="890">                                "comments": 11</tspan>
                        <tspan x="7" y="894">                            },</tspan>
                        <tspan x="7" y="898">                            {</tspan>
                        <tspan x="7" y="902">                                "date": "2015-01-08T00:00:00.000Z",</tspan>
                        <tspan x="7" y="906">                                "pull_requests": 2</tspan>
                        <tspan x="7" y="910">                                "comments": 31</tspan>
                        <tspan x="7" y="914">                            }</tspan>
                        <tspan x="7" y="918">                        ]</tspan>
                        <tspan x="7" y="922">    """</tspan>
                        <tspan x="7" y="926">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/timeseries/pulls'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="930">        flaskify_ghtorrent(ghtorrent, ghtorrent.pulls))</tspan>
                        <tspan x="7" y="934"></tspan>
                        <tspan x="7" y="938">    """</tspan>
                        <tspan x="7" y="942">    @api {get} /:owner/:repo/stargazers Stargazers by Week</tspan>
                        <tspan x="7" y="946">    @apiName StargazersByWeek</tspan>
                        <tspan x="7" y="950">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="954"></tspan>
                        <tspan x="7" y="958">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="962">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="966"></tspan>
                        <tspan x="7" y="970">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="974">                        [</tspan>
                        <tspan x="7" y="978">                            {</tspan>
                        <tspan x="7" y="982">                                "date": "2015-01-01T00:00:00.000Z",</tspan>
                        <tspan x="7" y="986">                                "watchers": 133</tspan>
                        <tspan x="7" y="990">                            },</tspan>
                        <tspan x="7" y="994">                            {</tspan>
                        <tspan x="7" y="998">                                "date": "2015-01-08T00:00:00.000Z",</tspan>
                        <tspan x="7" y="1002">                                "watchers": 54</tspan>
                        <tspan x="7" y="1006">                            }</tspan>
                        <tspan x="7" y="1010">                        ]</tspan>
                        <tspan x="7" y="1014">    """</tspan>
                        <tspan x="7" y="1018">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/timeseries/stargazers'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="1022">        flaskify_ghtorrent(ghtorrent, ghtorrent.stargazers))</tspan>
                        <tspan x="7" y="1026"></tspan>
                        <tspan x="7" y="1030">    """</tspan>
                        <tspan x="7" y="1034">    @api {get} /:owner/:repo/pulls/acceptance_rate Pull Request Acceptance Rate by Week</tspan>
                        <tspan x="7" y="1038">    @apiDescription For each week, the rate is calculated as (pull requests merged that week) / (pull requests opened that week)</tspan>
                        <tspan x="7" y="1042">    @apiName Stargazers</tspan>
                        <tspan x="7" y="1046">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="1050"></tspan>
                        <tspan x="7" y="1054">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="1058">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="1062"></tspan>
                        <tspan x="7" y="1066">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="1070">                        [</tspan>
                        <tspan x="7" y="1074">                            {</tspan>
                        <tspan x="7" y="1078">                                "date": "2015-01-01T00:00:00.000Z",</tspan>
                        <tspan x="7" y="1082">                                "rate": 0.5</tspan>
                        <tspan x="7" y="1086">                            },</tspan>
                        <tspan x="7" y="1090">                            {</tspan>
                        <tspan x="7" y="1094">                                "date": "2015-01-08T00:00:00.000Z",</tspan>
                        <tspan x="7" y="1098">                                "rate": 0.33</tspan>
                        <tspan x="7" y="1102">                            }</tspan>
                        <tspan x="7" y="1106">                        ]</tspan>
                        <tspan x="7" y="1110">    """</tspan>
                        <tspan x="7" y="1114">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/pulls/acceptance_rate'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="1118">        flaskify_ghtorrent(ghtorrent, ghtorrent.pull_acceptance_rate))</tspan>
                        <tspan x="7" y="1122"></tspan>
                        <tspan x="7" y="1126">    # Contribution Trends</tspan>
                        <tspan x="7" y="1130">    """</tspan>
                        <tspan x="7" y="1134">    @api {get} /:owner/:repo/contributors Total Contributions by User</tspan>
                        <tspan x="7" y="1138">    @apiName TotalContributions</tspan>
                        <tspan x="7" y="1142">    @apiGroup Users</tspan>
                        <tspan x="7" y="1146"></tspan>
                        <tspan x="7" y="1150">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="1154">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="1158"></tspan>
                        <tspan x="7" y="1162">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="1166">                       [</tspan>
                        <tspan x="7" y="1170">                            {</tspan>
                        <tspan x="7" y="1174">                                "login": "foo",</tspan>
                        <tspan x="7" y="1178">                                "location": "Springfield",</tspan>
                        <tspan x="7" y="1182">                                "commits": 1337.0,</tspan>
                        <tspan x="7" y="1186">                                "pull_requests": 60.0,</tspan>
                        <tspan x="7" y="1190">                                "issues": null,</tspan>
                        <tspan x="7" y="1194">                                "commit_comments": 158.0,</tspan>
                        <tspan x="7" y="1198">                                "pull_request_comments": 718.0,</tspan>
                        <tspan x="7" y="1202">                                "issue_comments": 1668.0</tspan>
                        <tspan x="7" y="1206">                            },</tspan>
                        <tspan x="7" y="1210">                            {</tspan>
                        <tspan x="7" y="1214">                                "login": "bar",</tspan>
                        <tspan x="7" y="1218">                                "location": null,</tspan>
                        <tspan x="7" y="1222">                                "commits": 3968.0,</tspan>
                        <tspan x="7" y="1226">                                "pull_requests": null,</tspan>
                        <tspan x="7" y="1230">                                "issues": 12.0,</tspan>
                        <tspan x="7" y="1234">                                "commit_comments": 158.0,</tspan>
                        <tspan x="7" y="1238">                                "pull_request_comments": 718.0,</tspan>
                        <tspan x="7" y="1242">                                "issue_comments": 1568.0</tspan>
                        <tspan x="7" y="1246">                            }</tspan>
                        <tspan x="7" y="1250">                        ]</tspan>
                        <tspan x="7" y="1254">    """</tspan>
                        <tspan x="7" y="1258">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/contributors'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="1262">        flaskify_ghtorrent(ghtorrent, ghtorrent.contributors))</tspan>
                        <tspan x="7" y="1266"></tspan>
                        <tspan x="7" y="1270">    #######################</tspan>
                        <tspan x="7" y="1274">    # Contribution Trends #</tspan>
                        <tspan x="7" y="1278">    #######################</tspan>
                        <tspan x="7" y="1282"></tspan>
                        <tspan x="7" y="1286">    """</tspan>
                        <tspan x="7" y="1290">    @api {get} /:owner/:repo/contributions Contributions by Week</tspan>
                        <tspan x="7" y="1294">    @apiName ContributionsByWeek</tspan>
                        <tspan x="7" y="1298">    @apiGroup Timeseries</tspan>
                        <tspan x="7" y="1302"></tspan>
                        <tspan x="7" y="1306">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="1310">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="1314">    @apiParam (String) user Limit results to the given user's contributions</tspan>
                        <tspan x="7" y="1318"></tspan>
                        <tspan x="7" y="1322">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="1326">                       [</tspan>
                        <tspan x="7" y="1330">                            {</tspan>
                        <tspan x="7" y="1334">                                "date": "2015-01-01T00:00:00.000Z",</tspan>
                        <tspan x="7" y="1338">                                "commits": 37.0,</tspan>
                        <tspan x="7" y="1342">                                "pull_requests": null,</tspan>
                        <tspan x="7" y="1346">                                "issues": null,</tspan>
                        <tspan x="7" y="1350">                                "commit_comments": 7.0,</tspan>
                        <tspan x="7" y="1354">                                "pull_request_comments": 8.0,</tspan>
                        <tspan x="7" y="1358">                                "issue_comments": 17.0</tspan>
                        <tspan x="7" y="1362">                            },</tspan>
                        <tspan x="7" y="1366">                            {</tspan>
                        <tspan x="7" y="1370">                                "date": "2015-01-08T00:00:00.000Z",</tspan>
                        <tspan x="7" y="1374">                                "commits": 68.0,</tspan>
                        <tspan x="7" y="1378">                                "pull_requests": null,</tspan>
                        <tspan x="7" y="1382">                                "issues": 12.0,</tspan>
                        <tspan x="7" y="1386">                                "commit_comments": 18.0,</tspan>
                        <tspan x="7" y="1390">                                "pull_request_comments": 13.0,</tspan>
                        <tspan x="7" y="1394">                                "issue_comments": 28.0</tspan>
                        <tspan x="7" y="1398">                            }</tspan>
                        <tspan x="7" y="1402">                        ]</tspan>
                        <tspan x="7" y="1406">    """</tspan>
                        <tspan x="7" y="1410">    @app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/contributions'.format(GHDATA_API_VERSION))</tspan>
                        <tspan x="7" y="1414">    def contributions(owner, repo):</tspan>
                        <tspan x="7" y="1418">        repoid = ghtorrent.repoid(owner=owner, repo=repo)</tspan>
                        <tspan x="7" y="1422">        user = request.args.get('user')</tspan>
                        <tspan x="7" y="1426">        if (user):</tspan>
                        <tspan x="7" y="1430">            userid = ghtorrent.userid(username=user)</tspan>
                        <tspan x="7" y="1434">            contribs = ghtorrent.contributions(repoid=repoid, userid=userid)</tspan>
                        <tspan x="7" y="1438">        else:</tspan>
                        <tspan x="7" y="1442">            contribs = ghtorrent.contributions(repoid=repoid)</tspan>
                        <tspan x="7" y="1446">        return Response(response=contribs,</tspan>
                        <tspan x="7" y="1450">                        status=200,</tspan>
                        <tspan x="7" y="1454">                        mimetype="application/json")</tspan>
                        <tspan x="7" y="1458"></tspan>
                        <tspan x="7" y="1462">    # Diversity</tspan>
                        <tspan x="7" y="1466"></tspan>
                        <tspan x="7" y="1470">    """</tspan>
                        <tspan x="7" y="1474">    @api {get} /:owner/:repo/commits/locations Commits and Location by User</tspan>
                        <tspan x="7" y="1478">    @apiName Stargazers</tspan>
                        <tspan x="7" y="1482">    @apiGroup Diversity</tspan>
                        <tspan x="7" y="1486"></tspan>
                        <tspan x="7" y="1490">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="1494">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="1498"></tspan>
                        <tspan x="7" y="1502">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="1506">                        [</tspan>
                        <tspan x="7" y="1510">                            {</tspan>
                        <tspan x="7" y="1514">                                "login": "bonnie",</tspan>
                        <tspan x="7" y="1518">                                "location": "Rowena, TX",</tspan>
                        <tspan x="7" y="1522">                                "commits": 12</tspan>
                        <tspan x="7" y="1526">                            },</tspan>
                        <tspan x="7" y="1530">                            {</tspan>
                        <tspan x="7" y="1534">                                "login":"clyde",</tspan>
                        <tspan x="7" y="1538">                                "location":"Ellis County, TX",</tspan>
                        <tspan x="7" y="1542">                                "commits": 12</tspan>
                        <tspan x="7" y="1546">                            }</tspan>
                        <tspan x="7" y="1550">                        ]</tspan>
                        <tspan x="7" y="1554">    """</tspan>
                        <tspan x="7" y="1558">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/commits/locations'.format(GHDATA_API_VERSION))(</tspan>
                        <tspan x="7" y="1562">        flaskify_ghtorrent(ghtorrent, ghtorrent.committer_locations))</tspan>
                        <tspan x="7" y="1566"></tspan>
                        <tspan x="7" y="1570">    # Popularity</tspan>
                        <tspan x="7" y="1574">    """</tspan>
                        <tspan x="7" y="1578">    @api {get} /:owner/:repo/linking_websites Linking Websites</tspan>
                        <tspan x="7" y="1582">    @apiDescription Returns an array of websites and their rank according to http://publicwww.com/</tspan>
                        <tspan x="7" y="1586">    @apiName LinkingWebsites</tspan>
                        <tspan x="7" y="1590">    @apiGroup Popularity</tspan>
                        <tspan x="7" y="1594"></tspan>
                        <tspan x="7" y="1598">    @apiParam {String} owner Username of the owner of the GitHub repository</tspan>
                        <tspan x="7" y="1602">    @apiParam {String} repo Name of the GitHub repository</tspan>
                        <tspan x="7" y="1606"></tspan>
                        <tspan x="7" y="1610">    @apiSuccessExample {json} Success-Response:</tspan>
                        <tspan x="7" y="1614">                        [</tspan>
                        <tspan x="7" y="1618">                            {</tspan>
                        <tspan x="7" y="1622">                                "url": "missouri.edu",</tspan>
                        <tspan x="7" y="1626">                                "rank": "1"</tspan>
                        <tspan x="7" y="1630">                            },</tspan>
                        <tspan x="7" y="1634">                            {</tspan>
                        <tspan x="7" y="1638">                                "url": "unomaha.edu",</tspan>
                        <tspan x="7" y="1642">                                "rank": "2"</tspan>
                        <tspan x="7" y="1646">                            }</tspan>
                        <tspan x="7" y="1650">                        ]</tspan>
                        <tspan x="7" y="1654">    """</tspan>
                        <tspan x="7" y="1658">    app.route('/{}/&lt;owner&gt;/&lt;repo&gt;/linking_websites'.format(GHDATA_API_VERSION))(flaskify(publicwww.linking_websites))</tspan>
                        <tspan x="7" y="1662"></tspan>
                        <tspan x="7" y="1666"></tspan>
                        <tspan x="7" y="1670">    if (debugmode):</tspan>
                        <tspan x="7" y="1674">        print(" * Serving static routes")</tspan>
                        <tspan x="7" y="1678">        # Serve the front-end files in debug mode to make it easier for developers to work on the interface</tspan>
                        <tspan x="7" y="1682">        # @todo: Figure out why this isn't working.</tspan>
                        <tspan x="7" y="1686">        @app.route('/')</tspan>
                        <tspan x="7" y="1690">        def index():</tspan>
                        <tspan x="7" y="1694">            root_dir = os.path.dirname(os.getcwd())</tspan>
                        <tspan x="7" y="1698">            print(root_dir + '/ghdata/static')</tspan>
                        <tspan x="7" y="1702">            return send_from_directory(root_dir + '/ghdata/ghdata/static', 'index.html')</tspan>
                        <tspan x="7" y="1706"></tspan>
                        <tspan x="7" y="1710">        @app.route('/scripts/&lt;path&gt;')</tspan>
                        <tspan x="7" y="1714">        def send_scripts(path):</tspan>
                        <tspan x="7" y="1718">            root_dir = os.path.dirname(os.getcwd())</tspan>
                        <tspan x="7" y="1722">            return send_from_directory(root_dir + '/ghdata/ghdata/static/scripts', path)</tspan>
                        <tspan x="7" y="1726"></tspan>
                        <tspan x="7" y="1730">        @app.route('/styles/&lt;path&gt;')</tspan>
                        <tspan x="7" y="1734">        def send_styles(path):</tspan>
                        <tspan x="7" y="1738">            root_dir = os.path.dirname(os.getcwd())</tspan>
                        <tspan x="7" y="1742">            return send_from_directory(root_dir+ '/ghdata/ghdata/static/styles', path)</tspan>
                        <tspan x="7" y="1746"></tspan>
                        <tspan x="7" y="1750">        app.debug = True</tspan>
                        <tspan x="7" y="1754"></tspan>
                        <tspan x="7" y="1758">    app.run(host=host, port=int(port), debug=debugmode)</tspan>
                        <tspan x="7" y="1762"></tspan>
                        <tspan x="7" y="1766">if __name__ == '__main__':</tspan>
                        <tspan x="7" y="1770">    run()</tspan>
                    </text>
                    <path d="M-68.4776014,156.25784 C-60.5334634,155.60485 -9.31063842,169.265503 -3.91999016,167.307975 C-1.29338465,166.354165 129.055631,158.660779 135.717319,167.307975 C149.78963,185.574521 159.726405,203.468094 165.62721,159.65494 C171.528015,115.841785 179.40794,36.885265 186.978448,58.7529367 C194.548956,80.6206084 191.941492,214.461773 198.312352,231.783623 C204.683211,249.105473 215.146967,174.044839 220.573057,167.307975 C225.999147,160.571112 338.290965,171.944691 346.910904,156.25784" id="Path-2" stroke="#E33E3E" stroke-width="15" mask="url(#mask-2)"></path>
                </g>
            </g>
            <text id="OSSHealth" font-family="Hack-Bold, Hack" font-size="250" font-weight="bold" letter-spacing="-16.9811325">
                <tspan x="317" y="232" fill="#2C2C2C">O</tspan>
                <tspan x="450.531563" y="232" letter-spacing="-18" fill="#2C2C2C">S</tspan>
                <tspan x="583.044258" y="232" letter-spacing="-15.7232704" fill="#2C2C2C">S</tspan>
                <tspan x="717.833683" y="232" letter-spacing="-15.7232704" fill="#E33E3E">He</tspan>
                <tspan x="987.412533" y="232" letter-spacing="-40" fill="#E33E3E">a</tspan>
                <tspan x="1097.92523" y="232" letter-spacing="-50" fill="#E33E3E">l</tspan>
                <tspan x="1198.43792" y="232" letter-spacing="-17" fill="#E33E3E">t</tspan>
                <tspan x="1331.95062" y="232" letter-spacing="-15.7232704" fill="#E33E3E">h</tspan>
            </text>
        </g>
    </g>
</svg>