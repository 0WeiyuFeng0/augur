{"version":3,"sources":["app/GHDataAPI.js","app/GHDataCharts.js","app/lib/kube/kube.js","app/ui.js"],"names":[],"mappingsxyrHA;AAAA","file":"public/app.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar $ = require('jquery');\n\nvar GHDataAPI = function () {\n  function GHDataAPI(hostURL, version) {\n    _classCallCheck(this, GHDataAPI);\n\n    this._version = version || 'unstable';\n    this._host = hostURL || 'http://localhost:5000/';\n  }\n\n  _createClass(GHDataAPI, [{\n    key: 'Repo',\n    value: function Repo(owner, repoName) {\n      var _this = this;\n\n      if (repoName) {\n        var repo = { owner: owner, name: repoName };\n      } else if (owner) {\n        var splitURL = owner.split('/');\n        if (splitURL.length < 3) {\n          var repo = { owner: splitURL[0], name: splitURL[1] };\n        } else {\n          var repo = { owner: splitURL[3], name: splitURL[4] };\n        }\n      }\n\n      var Endpoint = function Endpoint(endpoint) {\n        var url = _this._host + _this._version + '/' + repo.owner + '/' + repo.name + '/' + endpoint;\n        return function (params, callback) {\n          return $.get(url, params, callback);\n        };\n      };\n\n      var Timeseries = function Timeseries(endpoint) {\n        var func = Endpoint('timeseries/' + endpoint);\n        func.relativeTo = function (baselineRepo, params, callback) {\n          var url = _this._host + _this._version + '/' + repo.owner + '/' + repo.name + '/timeseries/' + endpoint + '/relative_to/' + baselineRepo.owner + '/' + baselineRepo.name;\n          return $.get(url, params, callback);\n        };\n        return func;\n      };\n\n      repo.commits = Timeseries('commits');\n      repo.forks = Timeseries('forks');\n      repo.issues = Timeseries('issues');\n      repo.pulls = Timeseries('pulls');\n      repo.stars = Timeseries('stargazers');\n\n      repo.pullsAcceptanceRate = Endpoint('pulls/acceptance_rate');\n      repo.issuesResponseTime = Endpoint('issues/response_time');\n      repo.contributors = Endpoint('contributors');\n      repo.contributions = Endpoint('contributions');\n      repo.committerLocations = Endpoint('committer_locations');\n      repo.linkingWebsites = Endpoint('linkingWebsites');\n      repo.busFactor = Endpoint('bus_factor');\n\n      return repo;\n    }\n  }]);\n\n  return GHDataAPI;\n}();\n\nexports.default = GHDataAPI;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _metricsGraphics = require('metrics-graphics');\n\nvar _metricsGraphics2 = _interopRequireDefault(_metricsGraphics);\n\nvar _d = require('d3');\n\nvar d3 = _interopRequireWildcard(_d);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GHDataCharts = function () {\n  function GHDataCharts() {\n    _classCallCheck(this, GHDataCharts);\n  }\n\n  _createClass(GHDataCharts, null, [{\n    key: 'convertDates',\n    value: function convertDates(data) {\n      data = data.map(function (d) {\n        d.date = new Date(d.date);\n        return d;\n      });\n      return data;\n    }\n  }, {\n    key: 'ComparisonLineChart',\n    value: function ComparisonLineChart(selector, data, title, baseline) {\n      GHDataCharts.convertDates(data);\n      var keys = Object.keys(data[0]).filter(function (d) {\n        return (/ratio/.test(d)\n        );\n      });\n      console.log(keys);\n      return _metricsGraphics2.default.data_graphic({\n        title: title || 'Comparison',\n        data: data,\n        full_width: true,\n        height: 200,\n        baselines: [{ value: 1, label: baseline || 'Other Repo' }],\n        format: 'percentage',\n        x_accessor: 'date',\n        y_accessor: keys,\n        target: selector\n      });\n    }\n  }, {\n    key: 'LineChart',\n    value: function LineChart(selector, data, title) {\n      GHDataCharts.convertDates(data);\n      return _metricsGraphics2.default.data_graphic({\n        title: title || 'Activity',\n        data: data,\n        full_width: true,\n        height: 200,\n        x_accessor: 'date',\n        y_accessor: Object.keys(data[0]).slice(1),\n        target: selector\n      });\n    }\n  }, {\n    key: 'NoChart',\n    value: function NoChart(selector, title) {\n      return _metricsGraphics2.default.data_graphic({\n        title: \"Missing Data\",\n        error: 'Data unavaliable for ' + title,\n        chart_type: 'missing-data',\n        missing_text: title + ' could not be loaded',\n        target: '#missing-data',\n        full_width: true,\n        height: 200\n      });\n    }\n  }]);\n\n  return GHDataCharts;\n}();\n\nexports.default = GHDataCharts;\n","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*\n\tKube. CSS & JS Framework\n\tVersion 6.5.2\n\tUpdated: February 2, 2017\n\n\thttp://imperavi.com/kube/\n\n\tCopyright (c) 2009-2017, Imperavi LLC.\n\tLicense: MIT\n*/\nif (typeof jQuery === 'undefined') {\n    throw new Error('Kube\\'s requires jQuery');\n};\n;(function ($) {\n    var version = $.fn.jquery.split('.');if (version[0] == 1 && version[1] < 8) {\n        throw new Error('Kube\\'s requires at least jQuery v1.8');\n    }\n})(jQuery);\n\n;(function () {\n    // Inherits\n    Function.prototype.inherits = function (parent) {\n        var F = function F() {};\n        F.prototype = parent.prototype;\n        var f = new F();\n\n        for (var prop in this.prototype) {\n            f[prop] = this.prototype[prop];\n        }this.prototype = f;\n        this.prototype.super = parent.prototype;\n    };\n\n    // Core Class\n    var Kube = function Kube(element, options) {\n        options = (typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object' ? options : {};\n\n        this.$element = $(element);\n        this.opts = $.extend(true, this.defaults, $.fn[this.namespace].options, this.$element.data(), options);\n        this.$target = typeof this.opts.target === 'string' ? $(this.opts.target) : null;\n    };\n\n    // Core Functionality\n    Kube.prototype = {\n        getInstance: function getInstance() {\n            return this.$element.data('fn.' + this.namespace);\n        },\n        hasTarget: function hasTarget() {\n            return !(this.$target === null);\n        },\n        callback: function callback(type) {\n            var args = [].slice.call(arguments).splice(1);\n\n            // on element callback\n            if (this.$element) {\n                args = this._fireCallback($._data(this.$element[0], 'events'), type, this.namespace, args);\n            }\n\n            // on target callback\n            if (this.$target) {\n                args = this._fireCallback($._data(this.$target[0], 'events'), type, this.namespace, args);\n            }\n\n            // opts callback\n            if (this.opts && this.opts.callbacks && $.isFunction(this.opts.callbacks[type])) {\n                return this.opts.callbacks[type].apply(this, args);\n            }\n\n            return args;\n        },\n        _fireCallback: function _fireCallback(events, type, eventNamespace, args) {\n            if (events && typeof events[type] !== 'undefined') {\n                var len = events[type].length;\n                for (var i = 0; i < len; i++) {\n                    var namespace = events[type][i].namespace;\n                    if (namespace === eventNamespace) {\n                        var value = events[type][i].handler.apply(this, args);\n                    }\n                }\n            }\n\n            return typeof value === 'undefined' ? args : value;\n        }\n    };\n\n    // Scope\n    window.Kube = Kube;\n})();\n/**\n * @library Kube Plugin\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Plugin = {\n        create: function create(classname, pluginname) {\n            pluginname = typeof pluginname === 'undefined' ? classname.toLowerCase() : pluginname;\n\n            $.fn[pluginname] = function (method, options) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                var name = 'fn.' + pluginname;\n                var val = [];\n\n                this.each(function () {\n                    var $this = $(this),\n                        data = $this.data(name);\n                    options = (typeof method === 'undefined' ? 'undefined' : _typeof(method)) === 'object' ? method : options;\n\n                    if (!data) {\n                        // Initialization\n                        $this.data(name, {});\n                        $this.data(name, data = new Kube[classname](this, options));\n                    }\n\n                    // Call methods\n                    if (typeof method === 'string') {\n                        if ($.isFunction(data[method])) {\n                            var methodVal = data[method].apply(data, args);\n                            if (methodVal !== undefined) {\n                                val.push(methodVal);\n                            }\n                        } else {\n                            $.error('No such method \"' + method + '\" for ' + classname);\n                        }\n                    }\n                });\n\n                return val.length === 0 || val.length === 1 ? val.length === 0 ? this : val[0] : val;\n            };\n\n            $.fn[pluginname].options = {};\n\n            return this;\n        },\n        autoload: function autoload(pluginname) {\n            var arr = pluginname.split(',');\n            var len = arr.length;\n\n            for (var i = 0; i < len; i++) {\n                var name = arr[i].toLowerCase().split(',').map(function (s) {\n                    return s.trim();\n                }).join(',');\n                this.autoloadQueue.push(name);\n            }\n\n            return this;\n        },\n        autoloadQueue: [],\n        startAutoload: function startAutoload() {\n            if (!window.MutationObserver || this.autoloadQueue.length === 0) {\n                return;\n            }\n\n            var self = this;\n            var observer = new MutationObserver(function (mutations) {\n                mutations.forEach(function (mutation) {\n                    var newNodes = mutation.addedNodes;\n                    if (newNodes.length === 0 || newNodes.length === 1 && newNodes.nodeType === 3) {\n                        return;\n                    }\n\n                    self.startAutoloadOnce();\n                });\n            });\n\n            // pass in the target node, as well as the observer options\n            observer.observe(document, {\n                subtree: true,\n                childList: true\n            });\n        },\n        startAutoloadOnce: function startAutoloadOnce() {\n            var self = this;\n            var $nodes = $('[data-component]').not('[data-loaded]');\n            $nodes.each(function () {\n                var $el = $(this);\n                var pluginname = $el.data('component');\n\n                if (self.autoloadQueue.indexOf(pluginname) !== -1) {\n                    $el.attr('data-loaded', true);\n                    $el[pluginname]();\n                }\n            });\n        },\n        watch: function watch() {\n            Kube.Plugin.startAutoloadOnce();\n            Kube.Plugin.startAutoload();\n        }\n    };\n\n    $(window).on('load', function () {\n        Kube.Plugin.watch();\n    });\n})(Kube);\n/**\n * @library Kube Animation\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Animation = function (element, effect, callback) {\n        this.namespace = 'animation';\n        this.defaults = {};\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Initialization\n        this.effect = effect;\n        this.completeCallback = typeof callback === 'undefined' ? false : callback;\n        this.prefixes = ['', '-moz-', '-o-animation-', '-webkit-'];\n        this.queue = [];\n\n        this.start();\n    };\n\n    Kube.Animation.prototype = {\n        start: function start() {\n            if (this.isSlideEffect()) this.setElementHeight();\n\n            this.addToQueue();\n            this.clean();\n            this.animate();\n        },\n        addToQueue: function addToQueue() {\n            this.queue.push(this.effect);\n        },\n        setElementHeight: function setElementHeight() {\n            this.$element.height(this.$element.height());\n        },\n        removeElementHeight: function removeElementHeight() {\n            this.$element.css('height', '');\n        },\n        isSlideEffect: function isSlideEffect() {\n            return this.effect === 'slideDown' || this.effect === 'slideUp';\n        },\n        isHideableEffect: function isHideableEffect() {\n            var effects = ['fadeOut', 'slideUp', 'flipOut', 'zoomOut', 'slideOutUp', 'slideOutRight', 'slideOutLeft'];\n\n            return $.inArray(this.effect, effects) !== -1;\n        },\n        isToggleEffect: function isToggleEffect() {\n            return this.effect === 'show' || this.effect === 'hide';\n        },\n        storeHideClasses: function storeHideClasses() {\n            if (this.$element.hasClass('hide-sm')) this.$element.data('hide-sm-class', true);else if (this.$element.hasClass('hide-md')) this.$element.data('hide-md-class', true);\n        },\n        revertHideClasses: function revertHideClasses() {\n            if (this.$element.data('hide-sm-class')) this.$element.addClass('hide-sm').removeData('hide-sm-class');else if (this.$element.data('hide-md-class')) this.$element.addClass('hide-md').removeData('hide-md-class');else this.$element.addClass('hide');\n        },\n        removeHideClass: function removeHideClass() {\n            if (this.$element.data('hide-sm-class')) this.$element.removeClass('hide-sm');else if (this.$element.data('hide-md-class')) this.$element.removeClass('hide-md');else this.$element.removeClass('hide');\n        },\n        animate: function animate() {\n            this.storeHideClasses();\n            if (this.isToggleEffect()) {\n                return this.makeSimpleEffects();\n            }\n\n            this.$element.addClass('kubeanimated');\n            this.$element.addClass(this.queue[0]);\n            this.removeHideClass();\n\n            var _callback = this.queue.length > 1 ? null : this.completeCallback;\n            this.complete('AnimationEnd', $.proxy(this.makeComplete, this), _callback);\n        },\n        makeSimpleEffects: function makeSimpleEffects() {\n            if (this.effect === 'show') this.removeHideClass();else if (this.effect === 'hide') this.revertHideClasses();\n\n            if (typeof this.completeCallback === 'function') this.completeCallback(this);\n        },\n        makeComplete: function makeComplete() {\n            if (this.$element.hasClass(this.queue[0])) {\n                this.clean();\n                this.queue.shift();\n\n                if (this.queue.length) this.animate();\n            }\n        },\n        complete: function complete(type, make, callback) {\n            var event = type.toLowerCase() + ' webkit' + type + ' o' + type + ' MS' + type;\n\n            this.$element.one(event, $.proxy(function () {\n                if (typeof make === 'function') make();\n                if (this.isHideableEffect()) this.revertHideClasses();\n                if (this.isSlideEffect()) this.removeElementHeight();\n                if (typeof callback === 'function') callback(this);\n\n                this.$element.off(event);\n            }, this));\n        },\n        clean: function clean() {\n            this.$element.removeClass('kubeanimated').removeClass(this.queue[0]);\n        }\n    };\n\n    // Inheritance\n    Kube.Animation.inherits(Kube);\n})(Kube);\n\n// Plugin\n(function ($) {\n    $.fn.animation = function (effect, callback) {\n        var name = 'fn.animation';\n\n        return this.each(function () {\n            var $this = $(this),\n                data = $this.data(name);\n\n            $this.data(name, {});\n            $this.data(name, data = new Kube.Animation(this, effect, callback));\n        });\n    };\n\n    $.fn.animation.options = {};\n})(jQuery);\n/**\n * @library Kube Detect\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Detect = function () {};\n\n    Kube.Detect.prototype = {\n        isMobile: function isMobile() {\n            return (/(iPhone|iPod|BlackBerry|Android)/.test(navigator.userAgent)\n            );\n        },\n        isDesktop: function isDesktop() {\n            return !/(iPhone|iPod|iPad|BlackBerry|Android)/.test(navigator.userAgent);\n        },\n        isMobileScreen: function isMobileScreen() {\n            return $(window).width() <= 768;\n        },\n        isTabletScreen: function isTabletScreen() {\n            return $(window).width() >= 768 && $(window).width() <= 1024;\n        },\n        isDesktopScreen: function isDesktopScreen() {\n            return $(window).width() > 1024;\n        }\n    };\n})(Kube);\n/**\n * @library Kube FormData\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.FormData = function (app) {\n        this.opts = app.opts;\n    };\n\n    Kube.FormData.prototype = {\n        set: function set(data) {\n            this.data = data;\n        },\n        get: function get(formdata) {\n            this.formdata = formdata;\n\n            if (this.opts.appendForms) this.appendForms();\n            if (this.opts.appendFields) this.appendFields();\n\n            return this.data;\n        },\n        appendFields: function appendFields() {\n            var $fields = $(this.opts.appendFields);\n            if ($fields.length === 0) {\n                return;\n            }\n\n            var self = this;\n            var str = '';\n\n            if (this.formdata) {\n                $fields.each(function () {\n                    self.data.append($(this).attr('name'), $(this).val());\n                });\n            } else {\n                $fields.each(function () {\n                    str += '&' + $(this).attr('name') + '=' + $(this).val();\n                });\n\n                this.data = this.data === '' ? str.replace(/^&/, '') : this.data + str;\n            }\n        },\n        appendForms: function appendForms() {\n            var $forms = $(this.opts.appendForms);\n            if ($forms.length === 0) {\n                return;\n            }\n\n            if (this.formdata) {\n                var self = this;\n                var formsData = $(this.opts.appendForms).serializeArray();\n                $.each(formsData, function (i, s) {\n                    self.data.append(s.name, s.value);\n                });\n            } else {\n                var str = $forms.serialize();\n\n                this.data = this.data === '' ? str : this.data + '&' + str;\n            }\n        }\n    };\n})(Kube);\n/**\n * @library Kube Response\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Response = function (app) {};\n\n    Kube.Response.prototype = {\n        parse: function parse(str) {\n            if (str === '') return false;\n\n            var obj = {};\n\n            try {\n                obj = JSON.parse(str);\n            } catch (e) {\n                return false;\n            }\n\n            if (obj[0] !== undefined) {\n                for (var item in obj) {\n                    this.parseItem(obj[item]);\n                }\n            } else {\n                this.parseItem(obj);\n            }\n\n            return obj;\n        },\n        parseItem: function parseItem(item) {\n            if (item.type === 'value') {\n                $.each(item.data, $.proxy(function (key, val) {\n                    val = val === null || val === false ? 0 : val;\n                    val = val === true ? 1 : val;\n\n                    $(key).val(val);\n                }, this));\n            } else if (item.type === 'html') {\n                $.each(item.data, $.proxy(function (key, val) {\n                    val = val === null || val === false ? '' : val;\n\n                    $(key).html(this.stripslashes(val));\n                }, this));\n            } else if (item.type === 'addClass') {\n                $.each(item.data, function (key, val) {\n                    $(key).addClass(val);\n                });\n            } else if (item.type === 'removeClass') {\n                $.each(item.data, function (key, val) {\n                    $(key).removeClass(val);\n                });\n            } else if (item.type === 'command') {\n                $.each(item.data, function (key, val) {\n                    $(val)[key]();\n                });\n            } else if (item.type === 'animation') {\n                $.each(item.data, function (key, data) {\n                    data.opts = typeof data.opts === 'undefined' ? {} : data.opts;\n\n                    $(key).animation(data.name, data.opts);\n                });\n            } else if (item.type === 'location') {\n                top.location.href = item.data;\n            } else if (item.type === 'notify') {\n                $.notify(item.data);\n            }\n\n            return item;\n        },\n        stripslashes: function stripslashes(str) {\n            return (str + '').replace(/\\0/g, '0').replace(/\\\\([\\\\'\"])/g, '$1');\n        }\n    };\n})(Kube);\n/**\n * @library Kube Utils\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Utils = function () {};\n\n    Kube.Utils.prototype = {\n        disableBodyScroll: function disableBodyScroll() {\n            var $body = $('html');\n            var windowWidth = window.innerWidth;\n\n            if (!windowWidth) {\n                var documentElementRect = document.documentElement.getBoundingClientRect();\n                windowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n\n            var isOverflowing = document.body.clientWidth < windowWidth;\n            var scrollbarWidth = this.measureScrollbar();\n\n            $body.css('overflow', 'hidden');\n            if (isOverflowing) $body.css('padding-right', scrollbarWidth);\n        },\n        measureScrollbar: function measureScrollbar() {\n            var $body = $('body');\n            var scrollDiv = document.createElement('div');\n            scrollDiv.className = 'scrollbar-measure';\n\n            $body.append(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            $body[0].removeChild(scrollDiv);\n            return scrollbarWidth;\n        },\n        enableBodyScroll: function enableBodyScroll() {\n            $('html').css({ 'overflow': '', 'padding-right': '' });\n        }\n    };\n})(Kube);\n/**\n * @library Kube Message\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Message = function (element, options) {\n        this.namespace = 'message';\n        this.defaults = {\n            closeSelector: '.close',\n            closeEvent: 'click',\n            animationOpen: 'fadeIn',\n            animationClose: 'fadeOut',\n            callbacks: ['open', 'opened', 'close', 'closed']\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Message.prototype = {\n        start: function start() {\n            this.$close = this.$element.find(this.opts.closeSelector);\n            this.$close.on(this.opts.closeEvent + '.' + this.namespace, $.proxy(this.close, this));\n            this.$element.addClass('open');\n        },\n        stop: function stop() {\n            this.$close.off('.' + this.namespace);\n            this.$element.removeClass('open');\n        },\n        open: function open(e) {\n            if (e) e.preventDefault();\n\n            if (!this.isOpened()) {\n                this.callback('open');\n                this.$element.animation(this.opts.animationOpen, $.proxy(this.onOpened, this));\n            }\n        },\n        isOpened: function isOpened() {\n            return this.$element.hasClass('open');\n        },\n        onOpened: function onOpened() {\n            this.callback('opened');\n            this.$element.addClass('open');\n        },\n        close: function close(e) {\n            if (e) e.preventDefault();\n\n            if (this.isOpened()) {\n                this.callback('close');\n                this.$element.animation(this.opts.animationClose, $.proxy(this.onClosed, this));\n            }\n        },\n        onClosed: function onClosed() {\n            this.callback('closed');\n            this.$element.removeClass('open');\n        }\n    };\n\n    // Inheritance\n    Kube.Message.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Message');\n    Kube.Plugin.autoload('Message');\n})(Kube);\n/**\n * @library Kube Sticky\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Sticky = function (element, options) {\n        this.namespace = 'sticky';\n        this.defaults = {\n            classname: 'fixed',\n            offset: 0, // pixels\n            callbacks: ['fixed', 'unfixed']\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Sticky.prototype = {\n        start: function start() {\n            this.offsetTop = this.getOffsetTop();\n\n            this.load();\n            $(window).scroll($.proxy(this.load, this));\n        },\n        getOffsetTop: function getOffsetTop() {\n            return this.$element.offset().top;\n        },\n        load: function load() {\n            return this.isFix() ? this.fixed() : this.unfixed();\n        },\n        isFix: function isFix() {\n            return $(window).scrollTop() > this.offsetTop + this.opts.offset;\n        },\n        fixed: function fixed() {\n            this.$element.addClass(this.opts.classname).css('top', this.opts.offset + 'px');\n            this.callback('fixed');\n        },\n        unfixed: function unfixed() {\n            this.$element.removeClass(this.opts.classname).css('top', '');\n            this.callback('unfixed');\n        }\n    };\n\n    // Inheritance\n    Kube.Sticky.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Sticky');\n    Kube.Plugin.autoload('Sticky');\n})(Kube);\n/**\n * @library Kube Toggleme\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Toggleme = function (element, options) {\n        this.namespace = 'toggleme';\n        this.defaults = {\n            toggleEvent: 'click',\n            target: null,\n            text: '',\n            animationOpen: 'slideDown',\n            animationClose: 'slideUp',\n            callbacks: ['open', 'opened', 'close', 'closed']\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Toggleme.prototype = {\n        start: function start() {\n            if (!this.hasTarget()) return;\n\n            this.$element.on(this.opts.toggleEvent + '.' + this.namespace, $.proxy(this.toggle, this));\n        },\n        stop: function stop() {\n            this.$element.off('.' + this.namespace);\n            this.revertText();\n        },\n        toggle: function toggle(e) {\n            if (this.isOpened()) this.close(e);else this.open(e);\n        },\n        open: function open(e) {\n            if (e) e.preventDefault();\n\n            if (!this.isOpened()) {\n                this.storeText();\n                this.callback('open');\n                this.$target.animation('slideDown', $.proxy(this.onOpened, this));\n\n                // changes the text of $element with a less delay to smooth\n                setTimeout($.proxy(this.replaceText, this), 100);\n            }\n        },\n        close: function close(e) {\n            if (e) e.preventDefault();\n\n            if (this.isOpened()) {\n                this.callback('close');\n                this.$target.animation('slideUp', $.proxy(this.onClosed, this));\n            }\n        },\n        isOpened: function isOpened() {\n            return this.$target.hasClass('open');\n        },\n        onOpened: function onOpened() {\n            this.$target.addClass('open');\n            this.callback('opened');\n        },\n        onClosed: function onClosed() {\n            this.$target.removeClass('open');\n            this.revertText();\n            this.callback('closed');\n        },\n        storeText: function storeText() {\n            this.$element.data('replacement-text', this.$element.html());\n        },\n        revertText: function revertText() {\n            var text = this.$element.data('replacement-text');\n            if (text) this.$element.html(text);\n\n            this.$element.removeData('replacement-text');\n        },\n        replaceText: function replaceText() {\n            if (this.opts.text !== '') {\n                this.$element.html(this.opts.text);\n            }\n        }\n    };\n\n    // Inheritance\n    Kube.Toggleme.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Toggleme');\n    Kube.Plugin.autoload('Toggleme');\n})(Kube);\n/**\n * @library Kube Offcanvas\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Offcanvas = function (element, options) {\n        this.namespace = 'offcanvas';\n        this.defaults = {\n            target: null, // selector\n            push: true, // boolean\n            width: '250px', // string\n            direction: 'left', // string: left or right\n            toggleEvent: 'click',\n            clickOutside: true, // boolean\n            animationOpen: 'slideInLeft',\n            animationClose: 'slideOutLeft',\n            callbacks: ['open', 'opened', 'close', 'closed']\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Services\n        this.utils = new Kube.Utils();\n        this.detect = new Kube.Detect();\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Offcanvas.prototype = {\n        start: function start() {\n            if (!this.hasTarget()) return;\n\n            this.buildTargetWidth();\n            this.buildAnimationDirection();\n\n            this.$close = this.getCloseLink();\n            this.$element.on(this.opts.toggleEvent + '.' + this.namespace, $.proxy(this.toggle, this));\n            this.$target.addClass('offcanvas');\n        },\n        stop: function stop() {\n            this.closeAll();\n\n            this.$element.off('.' + this.namespace);\n            this.$close.off('.' + this.namespace);\n            $(document).off('.' + this.namespace);\n        },\n        toggle: function toggle(e) {\n            if (this.isOpened()) this.close(e);else this.open(e);\n        },\n        buildTargetWidth: function buildTargetWidth() {\n            this.opts.width = $(window).width() < parseInt(this.opts.width) ? '100%' : this.opts.width;\n        },\n        buildAnimationDirection: function buildAnimationDirection() {\n            if (this.opts.direction === 'right') {\n                this.opts.animationOpen = 'slideInRight';\n                this.opts.animationClose = 'slideOutRight';\n            }\n        },\n        getCloseLink: function getCloseLink() {\n            return this.$target.find('.close');\n        },\n        open: function open(e) {\n            if (e) e.preventDefault();\n\n            if (!this.isOpened()) {\n                this.closeAll();\n                this.callback('open');\n\n                this.$target.addClass('offcanvas-' + this.opts.direction);\n                this.$target.css('width', this.opts.width);\n\n                this.pushBody();\n\n                this.$target.animation(this.opts.animationOpen, $.proxy(this.onOpened, this));\n            }\n        },\n        closeAll: function closeAll() {\n            var $elms = $(document).find('.offcanvas');\n            if ($elms.length !== 0) {\n                $elms.each(function () {\n                    var $el = $(this);\n\n                    if ($el.hasClass('open')) {\n                        $el.css('width', '').animation('hide');\n                        $el.removeClass('open offcanvas-left offcanvas-right');\n                    }\n                });\n\n                $(document).off('.' + this.namespace);\n                $('body').css('left', '');\n            }\n        },\n        close: function close(e) {\n            if (e) {\n                var $el = $(e.target);\n                var isTag = $el[0].tagName === 'A' || $el[0].tagName === 'BUTTON';\n                if (isTag && $el.closest('.offcanvas').length !== 0 && !$el.hasClass('close')) {\n                    return;\n                }\n\n                e.preventDefault();\n            }\n\n            if (this.isOpened()) {\n                this.utils.enableBodyScroll();\n                this.callback('close');\n                this.pullBody();\n                this.$target.animation(this.opts.animationClose, $.proxy(this.onClosed, this));\n            }\n        },\n        isOpened: function isOpened() {\n            return this.$target.hasClass('open');\n        },\n        onOpened: function onOpened() {\n            if (this.opts.clickOutside) $(document).on('click.' + this.namespace, $.proxy(this.close, this));\n            if (this.detect.isMobileScreen()) $('html').addClass('no-scroll');\n\n            $(document).on('keyup.' + this.namespace, $.proxy(this.handleKeyboard, this));\n            this.$close.on('click.' + this.namespace, $.proxy(this.close, this));\n\n            this.utils.disableBodyScroll();\n            this.$target.addClass('open');\n            this.callback('opened');\n        },\n        onClosed: function onClosed() {\n            if (this.detect.isMobileScreen()) $('html').removeClass('no-scroll');\n\n            this.$target.css('width', '').removeClass('offcanvas-' + this.opts.direction);\n\n            this.$close.off('.' + this.namespace);\n            $(document).off('.' + this.namespace);\n\n            this.$target.removeClass('open');\n            this.callback('closed');\n        },\n        handleKeyboard: function handleKeyboard(e) {\n            if (e.which === 27) this.close();\n        },\n        pullBody: function pullBody() {\n            if (this.opts.push) {\n                $('body').animate({ left: 0 }, 350, function () {\n                    $(this).removeClass('offcanvas-push-body');\n                });\n            }\n        },\n        pushBody: function pushBody() {\n            if (this.opts.push) {\n                var properties = this.opts.direction === 'left' ? { 'left': this.opts.width } : { 'left': '-' + this.opts.width };\n                $('body').addClass('offcanvas-push-body').animate(properties, 200);\n            }\n        }\n    };\n\n    // Inheritance\n    Kube.Offcanvas.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Offcanvas');\n    Kube.Plugin.autoload('Offcanvas');\n})(Kube);\n/**\n * @library Kube Collapse\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Collapse = function (element, options) {\n        this.namespace = 'collapse';\n        this.defaults = {\n            target: null,\n            toggle: true,\n            active: false, // string (hash = tab id selector)\n            toggleClass: 'collapse-toggle',\n            boxClass: 'collapse-box',\n            callbacks: ['open', 'opened', 'close', 'closed'],\n\n            // private\n            hashes: [],\n            currentHash: false,\n            currentItem: false\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Collapse.prototype = {\n        start: function start() {\n            // items\n            this.$items = this.getItems();\n            this.$items.each($.proxy(this.loadItems, this));\n\n            // boxes\n            this.$boxes = this.getBoxes();\n\n            // active\n            this.setActiveItem();\n        },\n        getItems: function getItems() {\n            return this.$element.find('.' + this.opts.toggleClass);\n        },\n        getBoxes: function getBoxes() {\n            return this.$element.find('.' + this.opts.boxClass);\n        },\n        loadItems: function loadItems(i, el) {\n            var item = this.getItem(el);\n\n            // set item identificator\n            item.$el.attr('rel', item.hash);\n\n            // active\n            if (!$(item.hash).hasClass('hide')) {\n                this.opts.currentItem = item;\n                this.opts.active = item.hash;\n\n                item.$el.addClass('active');\n            }\n\n            // event\n            item.$el.on('click.collapse', $.proxy(this.toggle, this));\n        },\n        setActiveItem: function setActiveItem() {\n            if (this.opts.active !== false) {\n                this.opts.currentItem = this.getItemBy(this.opts.active);\n                this.opts.active = this.opts.currentItem.hash;\n            }\n\n            if (this.opts.currentItem !== false) {\n                this.addActive(this.opts.currentItem);\n                this.opts.currentItem.$box.removeClass('hide');\n            }\n        },\n        addActive: function addActive(item) {\n            item.$box.removeClass('hide').addClass('open');\n            item.$el.addClass('active');\n\n            if (item.$caret !== false) item.$caret.removeClass('down').addClass('up');\n            if (item.$parent !== false) item.$parent.addClass('active');\n\n            this.opts.currentItem = item;\n        },\n        removeActive: function removeActive(item) {\n            item.$box.removeClass('open');\n            item.$el.removeClass('active');\n\n            if (item.$caret !== false) item.$caret.addClass('down').removeClass('up');\n            if (item.$parent !== false) item.$parent.removeClass('active');\n\n            this.opts.currentItem = false;\n        },\n        toggle: function toggle(e) {\n            if (e) e.preventDefault();\n\n            var target = $(e.target).closest('.' + this.opts.toggleClass).get(0) || e.target;\n            var item = this.getItem(target);\n\n            if (this.isOpened(item.hash)) this.close(item.hash);else this.open(e);\n        },\n        openAll: function openAll() {\n            this.$items.addClass('active');\n            this.$boxes.addClass('open').removeClass('hide');\n        },\n        open: function open(e, push) {\n            if (typeof e === 'undefined') return;\n            if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') e.preventDefault();\n\n            var target = $(e.target).closest('.' + this.opts.toggleClass).get(0) || e.target;\n            var item = (typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object' ? this.getItem(target) : this.getItemBy(e);\n\n            if (item.$box.hasClass('open')) {\n                return;\n            }\n\n            if (this.opts.toggle) this.closeAll();\n\n            this.callback('open', item);\n            this.addActive(item);\n\n            item.$box.animation('slideDown', $.proxy(this.onOpened, this));\n        },\n        onOpened: function onOpened() {\n            this.callback('opened', this.opts.currentItem);\n        },\n        closeAll: function closeAll() {\n            this.$items.removeClass('active').closest('li').removeClass('active');\n            this.$boxes.removeClass('open').addClass('hide');\n        },\n        close: function close(num) {\n            var item = this.getItemBy(num);\n\n            this.callback('close', item);\n\n            this.opts.currentItem = item;\n\n            item.$box.animation('slideUp', $.proxy(this.onClosed, this));\n        },\n        onClosed: function onClosed() {\n            var item = this.opts.currentItem;\n\n            this.removeActive(item);\n            this.callback('closed', item);\n        },\n        isOpened: function isOpened(hash) {\n            return $(hash).hasClass('open');\n        },\n        getItem: function getItem(element) {\n            var item = {};\n\n            item.$el = $(element);\n            item.hash = item.$el.attr('href');\n            item.$box = $(item.hash);\n\n            var $parent = item.$el.parent();\n            item.$parent = $parent[0].tagName === 'LI' ? $parent : false;\n\n            var $caret = item.$el.find('.caret');\n            item.$caret = $caret.length !== 0 ? $caret : false;\n\n            return item;\n        },\n        getItemBy: function getItemBy(num) {\n            var element = typeof num === 'number' ? this.$items.eq(num - 1) : this.$element.find('[rel=\"' + num + '\"]');\n\n            return this.getItem(element);\n        }\n    };\n\n    // Inheritance\n    Kube.Collapse.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Collapse');\n    Kube.Plugin.autoload('Collapse');\n})(Kube);\n/**\n * @library Kube Dropdown\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Dropdown = function (element, options) {\n        this.namespace = 'dropdown';\n        this.defaults = {\n            target: null,\n            toggleEvent: 'click',\n            height: false, // integer\n            width: false, // integer\n            animationOpen: 'slideDown',\n            animationClose: 'slideUp',\n            caretUp: false,\n            callbacks: ['open', 'opened', 'close', 'closed']\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Services\n        this.utils = new Kube.Utils();\n        this.detect = new Kube.Detect();\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Dropdown.prototype = {\n        start: function start() {\n            this.buildClose();\n            this.buildCaret();\n\n            if (this.detect.isMobile()) this.buildMobileAnimation();\n\n            this.$target.addClass('hide');\n            this.$element.on(this.opts.toggleEvent + '.' + this.namespace, $.proxy(this.toggle, this));\n        },\n        stop: function stop() {\n            this.$element.off('.' + this.namespace);\n            this.$target.removeClass('open').addClass('hide');\n            this.disableEvents();\n        },\n        buildMobileAnimation: function buildMobileAnimation() {\n            this.opts.animationOpen = 'fadeIn';\n            this.opts.animationClose = 'fadeOut';\n        },\n        buildClose: function buildClose() {\n            this.$close = this.$target.find('.close');\n        },\n        buildCaret: function buildCaret() {\n            this.$caret = this.getCaret();\n            this.buildCaretPosition();\n        },\n        buildCaretPosition: function buildCaretPosition() {\n            var height = this.$element.offset().top + this.$element.innerHeight() + this.$target.innerHeight();\n\n            if ($(document).height() > height) {\n                return;\n            }\n\n            this.opts.caretUp = true;\n            this.$caret.addClass('up');\n        },\n        getCaret: function getCaret() {\n            return this.$element.find('.caret');\n        },\n        toggleCaretOpen: function toggleCaretOpen() {\n            if (this.opts.caretUp) this.$caret.removeClass('up').addClass('down');else this.$caret.removeClass('down').addClass('up');\n        },\n        toggleCaretClose: function toggleCaretClose() {\n            if (this.opts.caretUp) this.$caret.removeClass('down').addClass('up');else this.$caret.removeClass('up').addClass('down');\n        },\n        toggle: function toggle(e) {\n            if (this.isOpened()) this.close(e);else this.open(e);\n        },\n        open: function open(e) {\n            if (e) e.preventDefault();\n\n            this.callback('open');\n            $('.dropdown').removeClass('open').addClass('hide');\n\n            if (this.opts.height) this.$target.css('min-height', this.opts.height + 'px');\n            if (this.opts.width) this.$target.width(this.opts.width);\n\n            this.setPosition();\n            this.toggleCaretOpen();\n\n            this.$target.animation(this.opts.animationOpen, $.proxy(this.onOpened, this));\n        },\n        close: function close(e) {\n            if (!this.isOpened()) {\n                return;\n            }\n\n            if (e) {\n                if (this.shouldNotBeClosed(e.target)) {\n                    return;\n                }\n\n                e.preventDefault();\n            }\n\n            this.utils.enableBodyScroll();\n            this.callback('close');\n            this.toggleCaretClose();\n\n            this.$target.animation(this.opts.animationClose, $.proxy(this.onClosed, this));\n        },\n        onClosed: function onClosed() {\n            this.$target.removeClass('open');\n            this.disableEvents();\n            this.callback('closed');\n        },\n        onOpened: function onOpened() {\n            this.$target.addClass('open');\n            this.enableEvents();\n            this.callback('opened');\n        },\n        isOpened: function isOpened() {\n            return this.$target.hasClass('open');\n        },\n        enableEvents: function enableEvents() {\n            if (this.detect.isDesktop()) {\n                this.$target.on('mouseover.' + this.namespace, $.proxy(this.utils.disableBodyScroll, this.utils)).on('mouseout.' + this.namespace, $.proxy(this.utils.enableBodyScroll, this.utils));\n            }\n\n            $(document).on('scroll.' + this.namespace, $.proxy(this.setPosition, this));\n            $(window).on('resize.' + this.namespace, $.proxy(this.setPosition, this));\n            $(document).on('click.' + this.namespace + ' touchstart.' + this.namespace, $.proxy(this.close, this));\n            $(document).on('keydown.' + this.namespace, $.proxy(this.handleKeyboard, this));\n            this.$target.find('[data-action=\"dropdown-close\"]').on('click.' + this.namespace, $.proxy(this.close, this));\n        },\n        disableEvents: function disableEvents() {\n            this.$target.off('.' + this.namespace);\n            $(document).off('.' + this.namespace);\n            $(window).off('.' + this.namespace);\n        },\n        handleKeyboard: function handleKeyboard(e) {\n            if (e.which === 27) this.close(e);\n        },\n        shouldNotBeClosed: function shouldNotBeClosed(el) {\n            if ($(el).attr('data-action') === 'dropdown-close' || el === this.$close[0]) {\n                return false;\n            } else if ($(el).closest('.dropdown').length === 0) {\n                return false;\n            }\n\n            return true;\n        },\n        isNavigationFixed: function isNavigationFixed() {\n            return this.$element.closest('.fixed').length !== 0;\n        },\n        getPlacement: function getPlacement(height) {\n            return $(document).height() < height ? 'top' : 'bottom';\n        },\n        getOffset: function getOffset(position) {\n            return this.isNavigationFixed() ? this.$element.position() : this.$element.offset();\n        },\n        getPosition: function getPosition() {\n            return this.isNavigationFixed() ? 'fixed' : 'absolute';\n        },\n        setPosition: function setPosition() {\n            if (this.detect.isMobile()) {\n                this.$target.addClass('dropdown-mobile');\n                return;\n            }\n\n            var position = this.getPosition();\n            var coords = this.getOffset(position);\n            var height = this.$target.innerHeight();\n            var width = this.$target.innerWidth();\n            var placement = this.getPlacement(coords.top + height + this.$element.innerHeight());\n            var leftFix = $(window).width() < coords.left + width ? width - this.$element.innerWidth() : 0;\n            var top,\n                left = coords.left - leftFix;\n\n            if (placement === 'bottom') {\n                if (!this.isOpened()) this.$caret.removeClass('up').addClass('down');\n\n                this.opts.caretUp = false;\n                top = coords.top + this.$element.outerHeight() + 1;\n            } else {\n                this.opts.animationOpen = 'show';\n                this.opts.animationClose = 'hide';\n\n                if (!this.isOpened()) this.$caret.addClass('up').removeClass('down');\n\n                this.opts.caretUp = true;\n                top = coords.top - height - 1;\n            }\n\n            this.$target.css({ position: position, top: top + 'px', left: left + 'px' });\n        }\n    };\n\n    // Inheritance\n    Kube.Dropdown.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Dropdown');\n    Kube.Plugin.autoload('Dropdown');\n})(Kube);\n/**\n * @library Kube Tabs\n * @author Imperavi LLC\n * @license MIT\n */\n(function (Kube) {\n    Kube.Tabs = function (element, options) {\n        this.namespace = 'tabs';\n        this.defaults = {\n            equals: false,\n            active: false, // string (hash = tab id selector)\n            live: false, // class selector\n            hash: true, //boolean\n            callbacks: ['init', 'next', 'prev', 'open', 'opened', 'close', 'closed']\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Tabs.prototype = {\n        start: function start() {\n            if (this.opts.live !== false) this.buildLiveTabs();\n\n            this.tabsCollection = [];\n            this.hashesCollection = [];\n            this.currentHash = [];\n            this.currentItem = false;\n\n            // items\n            this.$items = this.getItems();\n            this.$items.each($.proxy(this.loadItems, this));\n\n            // tabs\n            this.$tabs = this.getTabs();\n\n            // location hash\n            this.currentHash = this.getLocationHash();\n\n            // close all\n            this.closeAll();\n\n            // active & height\n            this.setActiveItem();\n            this.setItemHeight();\n\n            // callback\n            this.callback('init');\n        },\n        getTabs: function getTabs() {\n            return $(this.tabsCollection).map(function () {\n                return this.toArray();\n            });\n        },\n        getItems: function getItems() {\n            return this.$element.find('a');\n        },\n        loadItems: function loadItems(i, el) {\n            var item = this.getItem(el);\n\n            // set item identificator\n            item.$el.attr('rel', item.hash);\n\n            // collect item\n            this.collectItem(item);\n\n            // active\n            if (item.$parent.hasClass('active')) {\n                this.currentItem = item;\n                this.opts.active = item.hash;\n            }\n\n            // event\n            item.$el.on('click.tabs', $.proxy(this.open, this));\n        },\n        collectItem: function collectItem(item) {\n            this.tabsCollection.push(item.$tab);\n            this.hashesCollection.push(item.hash);\n        },\n        buildLiveTabs: function buildLiveTabs() {\n            var $layers = $(this.opts.live);\n\n            if ($layers.length === 0) {\n                return;\n            }\n\n            this.$liveTabsList = $('<ul />');\n            $layers.each($.proxy(this.buildLiveItem, this));\n\n            this.$element.html('').append(this.$liveTabsList);\n        },\n        buildLiveItem: function buildLiveItem(i, tab) {\n            var $tab = $(tab);\n            var $li = $('<li />');\n            var $a = $('<a />');\n            var index = i + 1;\n\n            $tab.attr('id', this.getLiveItemId($tab, index));\n\n            var hash = '#' + $tab.attr('id');\n            var title = this.getLiveItemTitle($tab);\n\n            $a.attr('href', hash).attr('rel', hash).text(title);\n            $li.append($a);\n\n            this.$liveTabsList.append($li);\n        },\n        getLiveItemId: function getLiveItemId($tab, index) {\n            return typeof $tab.attr('id') === 'undefined' ? this.opts.live.replace('.', '') + index : $tab.attr('id');\n        },\n        getLiveItemTitle: function getLiveItemTitle($tab) {\n            return typeof $tab.attr('data-title') === 'undefined' ? $tab.attr('id') : $tab.attr('data-title');\n        },\n        setActiveItem: function setActiveItem() {\n            if (this.currentHash) {\n                this.currentItem = this.getItemBy(this.currentHash);\n                this.opts.active = this.currentHash;\n            } else if (this.opts.active === false) {\n                this.currentItem = this.getItem(this.$items.first());\n                this.opts.active = this.currentItem.hash;\n            }\n\n            this.addActive(this.currentItem);\n        },\n        addActive: function addActive(item) {\n            item.$parent.addClass('active');\n            item.$tab.removeClass('hide').addClass('open');\n\n            this.currentItem = item;\n        },\n        removeActive: function removeActive(item) {\n            item.$parent.removeClass('active');\n            item.$tab.addClass('hide').removeClass('open');\n\n            this.currentItem = false;\n        },\n        next: function next(e) {\n            if (e) e.preventDefault();\n\n            var item = this.getItem(this.fetchElement('next'));\n\n            this.open(item.hash);\n            this.callback('next', item);\n        },\n        prev: function prev(e) {\n            if (e) e.preventDefault();\n\n            var item = this.getItem(this.fetchElement('prev'));\n\n            this.open(item.hash);\n            this.callback('prev', item);\n        },\n        fetchElement: function fetchElement(type) {\n            var element;\n            if (this.currentItem !== false) {\n                // prev or next\n                element = this.currentItem.$parent[type]().find('a');\n\n                if (element.length === 0) {\n                    return;\n                }\n            } else {\n                // first\n                element = this.$items[0];\n            }\n\n            return element;\n        },\n        open: function open(e, push) {\n            if (typeof e === 'undefined') return;\n            if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') e.preventDefault();\n\n            var item = (typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object' ? this.getItem(e.target) : this.getItemBy(e);\n            this.closeAll();\n\n            this.callback('open', item);\n            this.addActive(item);\n\n            // push state (doesn't need to push at the start)\n            this.pushStateOpen(push, item);\n            this.callback('opened', item);\n        },\n        pushStateOpen: function pushStateOpen(push, item) {\n            if (push !== false && this.opts.hash !== false) {\n                history.pushState(false, false, item.hash);\n            }\n        },\n        close: function close(num) {\n            var item = this.getItemBy(num);\n\n            if (!item.$parent.hasClass('active')) {\n                return;\n            }\n\n            this.callback('close', item);\n            this.removeActive(item);\n            this.pushStateClose();\n            this.callback('closed', item);\n        },\n        pushStateClose: function pushStateClose() {\n            if (this.opts.hash !== false) {\n                history.pushState(false, false, ' ');\n            }\n        },\n        closeAll: function closeAll() {\n            this.$tabs.removeClass('open').addClass('hide');\n            this.$items.parent().removeClass('active');\n        },\n        getItem: function getItem(element) {\n            var item = {};\n\n            item.$el = $(element);\n            item.hash = item.$el.attr('href');\n            item.$parent = item.$el.parent();\n            item.$tab = $(item.hash);\n\n            return item;\n        },\n        getItemBy: function getItemBy(num) {\n            var element = typeof num === 'number' ? this.$items.eq(num - 1) : this.$element.find('[rel=\"' + num + '\"]');\n\n            return this.getItem(element);\n        },\n        getLocationHash: function getLocationHash() {\n            if (this.opts.hash === false) {\n                return false;\n            }\n\n            return this.isHash() ? top.location.hash : false;\n        },\n        isHash: function isHash() {\n            return !(top.location.hash === '' || $.inArray(top.location.hash, this.hashesCollection) === -1);\n        },\n        setItemHeight: function setItemHeight() {\n            if (this.opts.equals) {\n                var minHeight = this.getItemMaxHeight() + 'px';\n                this.$tabs.css('min-height', minHeight);\n            }\n        },\n        getItemMaxHeight: function getItemMaxHeight() {\n            var max = 0;\n            this.$tabs.each(function () {\n                var h = $(this).height();\n                max = h > max ? h : max;\n            });\n\n            return max;\n        }\n    };\n\n    // Inheritance\n    Kube.Tabs.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Tabs');\n    Kube.Plugin.autoload('Tabs');\n})(Kube);\n/**\n * @library Kube Modal\n * @author Imperavi LLC\n * @license MIT\n */\n(function ($) {\n    $.modalcurrent = null;\n    $.modalwindow = function (options) {\n        var opts = $.extend({}, options, { show: true });\n        var $element = $('<span />');\n\n        $element.modal(opts);\n    };\n})(jQuery);\n\n(function (Kube) {\n    Kube.Modal = function (element, options) {\n        this.namespace = 'modal';\n        this.defaults = {\n            target: null,\n            show: false,\n            url: false,\n            header: false,\n            width: '600px', // string\n            height: false, // or string\n            maxHeight: false,\n            position: 'center', // top or center\n            overlay: true,\n            appendForms: false,\n            appendFields: false,\n            animationOpen: 'show',\n            animationClose: 'hide',\n            callbacks: ['open', 'opened', 'close', 'closed']\n        };\n\n        // Parent Constructor\n        Kube.apply(this, arguments);\n\n        // Services\n        this.utils = new Kube.Utils();\n        this.detect = new Kube.Detect();\n\n        // Initialization\n        this.start();\n    };\n\n    // Functionality\n    Kube.Modal.prototype = {\n        start: function start() {\n            if (!this.hasTarget()) {\n                return;\n            }\n\n            if (this.opts.show) this.load();else this.$element.on('click.' + this.namespace, $.proxy(this.load, this));\n        },\n        buildModal: function buildModal() {\n            this.$modal = this.$target.find('.modal');\n            this.$header = this.$target.find('.modal-header');\n            this.$close = this.$target.find('.close');\n            this.$body = this.$target.find('.modal-body');\n        },\n        buildOverlay: function buildOverlay() {\n            if (this.opts.overlay === false) {\n                return;\n            }\n\n            if ($('#modal-overlay').length !== 0) {\n                this.$overlay = $('#modal-overlay');\n            } else {\n                this.$overlay = $('<div id=\"modal-overlay\">').addClass('hide');\n                $('body').prepend(this.$overlay);\n            }\n\n            this.$overlay.addClass('overlay');\n        },\n        buildHeader: function buildHeader() {\n            if (this.opts.header) this.$header.html(this.opts.header);\n        },\n        load: function load(e) {\n            this.buildModal();\n            this.buildOverlay();\n            this.buildHeader();\n\n            if (this.opts.url) this.buildContent();else this.open(e);\n        },\n        open: function open(e) {\n            if (e) e.preventDefault();\n\n            if (this.isOpened()) {\n                return;\n            }\n\n            if (this.detect.isMobile()) this.opts.width = '96%';\n            if (this.opts.overlay) this.$overlay.removeClass('hide');\n\n            this.$target.removeClass('hide');\n            this.$modal.removeClass('hide');\n\n            this.enableEvents();\n            this.findActions();\n\n            this.resize();\n            $(window).on('resize.' + this.namespace, $.proxy(this.resize, this));\n\n            if (this.detect.isDesktop()) this.utils.disableBodyScroll();\n\n            // enter\n            this.$modal.find('input[type=text],input[type=url],input[type=email]').on('keydown.' + this.namespace, $.proxy(this.handleEnter, this));\n\n            this.callback('open');\n            this.$modal.animation(this.opts.animationOpen, $.proxy(this.onOpened, this));\n        },\n        close: function close(e) {\n            if (!this.$modal || !this.isOpened()) {\n                return;\n            }\n\n            if (e) {\n                if (this.shouldNotBeClosed(e.target)) {\n                    return;\n                }\n\n                e.preventDefault();\n            }\n\n            this.callback('close');\n            this.disableEvents();\n\n            this.$modal.animation(this.opts.animationClose, $.proxy(this.onClosed, this));\n\n            if (this.opts.overlay) this.$overlay.animation(this.opts.animationClose);\n        },\n        onOpened: function onOpened() {\n            this.$modal.addClass('open');\n            this.callback('opened');\n\n            $.modalcurrent = this;\n        },\n        onClosed: function onClosed() {\n            this.callback('closed');\n\n            this.$target.addClass('hide');\n            this.$modal.removeClass('open');\n\n            if (this.detect.isDesktop()) this.utils.enableBodyScroll();\n\n            this.$body.css('height', '');\n            $.modalcurrent = null;\n        },\n        isOpened: function isOpened() {\n            return this.$modal.hasClass('open');\n        },\n        getData: function getData() {\n            var formdata = new Kube.FormData(this);\n            formdata.set('');\n\n            return formdata.get();\n        },\n        buildContent: function buildContent() {\n            $.ajax({\n                url: this.opts.url + '?' + new Date().getTime(),\n                cache: false,\n                type: 'post',\n                data: this.getData(),\n                success: $.proxy(function (data) {\n                    this.$body.html(data);\n                    this.open();\n                }, this)\n            });\n        },\n        buildWidth: function buildWidth() {\n            var width = this.opts.width;\n            var top = '2%';\n            var bottom = '2%';\n            var percent = width.match(/%$/);\n\n            if (parseInt(this.opts.width) > $(window).width() && !percent) {\n                width = '96%';\n            } else if (!percent) {\n                top = '16px';\n                bottom = '16px';\n            }\n\n            this.$modal.css({ 'width': width, 'margin-top': top, 'margin-bottom': bottom });\n        },\n        buildPosition: function buildPosition() {\n            if (this.opts.position !== 'center') {\n                return;\n            }\n\n            var windowHeight = $(window).height();\n            var height = this.$modal.outerHeight();\n            var top = windowHeight / 2 - height / 2 + 'px';\n\n            if (this.detect.isMobile()) top = '2%';else if (height > windowHeight) top = '16px';\n\n            this.$modal.css('margin-top', top);\n        },\n        buildHeight: function buildHeight() {\n            var windowHeight = $(window).height();\n\n            if (this.opts.maxHeight) {\n                var padding = parseInt(this.$body.css('padding-top')) + parseInt(this.$body.css('padding-bottom'));\n                var margin = parseInt(this.$modal.css('margin-top')) + parseInt(this.$modal.css('margin-bottom'));\n                var height = windowHeight - this.$header.innerHeight() - padding - margin;\n\n                this.$body.height(height);\n            } else if (this.opts.height !== false) {\n                this.$body.css('height', this.opts.height);\n            }\n\n            var modalHeight = this.$modal.outerHeight();\n            if (modalHeight > windowHeight) {\n                this.opts.animationOpen = 'show';\n                this.opts.animationClose = 'hide';\n            }\n        },\n        resize: function resize() {\n            this.buildWidth();\n            this.buildPosition();\n            this.buildHeight();\n        },\n        enableEvents: function enableEvents() {\n            this.$close.on('click.' + this.namespace, $.proxy(this.close, this));\n            $(document).on('keyup.' + this.namespace, $.proxy(this.handleEscape, this));\n            this.$target.on('click.' + this.namespace, $.proxy(this.close, this));\n        },\n        disableEvents: function disableEvents() {\n            this.$close.off('.' + this.namespace);\n            $(document).off('.' + this.namespace);\n            this.$target.off('.' + this.namespace);\n            $(window).off('.' + this.namespace);\n        },\n        findActions: function findActions() {\n            this.$body.find('[data-action=\"modal-close\"]').on('mousedown.' + this.namespace, $.proxy(this.close, this));\n        },\n        setHeader: function setHeader(header) {\n            this.$header.html(header);\n        },\n        setContent: function setContent(content) {\n            this.$body.html(content);\n        },\n        setWidth: function setWidth(width) {\n            this.opts.width = width;\n            this.resize();\n        },\n        getModal: function getModal() {\n            return this.$modal;\n        },\n        getBody: function getBody() {\n            return this.$body;\n        },\n        getHeader: function getHeader() {\n            return this.$header;\n        },\n        handleEnter: function handleEnter(e) {\n            if (e.which === 13) {\n                e.preventDefault();\n                this.close(false);\n            }\n        },\n        handleEscape: function handleEscape(e) {\n            return e.which === 27 ? this.close(false) : true;\n        },\n        shouldNotBeClosed: function shouldNotBeClosed(el) {\n            if ($(el).attr('data-action') === 'modal-close' || el === this.$close[0]) {\n                return false;\n            } else if ($(el).closest('.modal').length === 0) {\n                return false;\n            }\n\n            return true;\n        }\n    };\n\n    // Inheritance\n    Kube.Modal.inherits(Kube);\n\n    // Plugin\n    Kube.Plugin.create('Modal');\n    Kube.Plugin.autoload('Modal');\n})(Kube);\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _GHDataCharts = require('./GHDataCharts');\n\nvar _GHDataCharts2 = _interopRequireDefault(_GHDataCharts);\n\nvar _GHDataAPI = require('./GHDataAPI');\n\nvar _GHDataAPI2 = _interopRequireDefault(_GHDataAPI);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar $ = require('jquery');\n\nvar GHDataDashboard = function () {\n  function GHDataDashboard(state) {\n    _classCallCheck(this, GHDataDashboard);\n\n    this.state = state || {\n      repo: {},\n      comparedTo: {}\n    };\n    this.ghdata = new _GHDataAPI2.default();\n  }\n\n  _createClass(GHDataDashboard, [{\n    key: 'addCard',\n    value: function addCard(title, repo, className) {\n      var cardElement = document.createElement('section');\n      if (className) {\n        cardElement.className = className;\n      }\n      var titleElement = document.createElement('h1');\n      var repoElement = document.createElement('h2');\n      titleElement.innerHTML = title;\n      repoElement.innerHTML = repo;\n      $('#cards').append(cardElement);\n      $(cardElement).append(titleElement);\n      $(cardElement).append(repoElement);\n      return cardElement;\n    }\n  }, {\n    key: 'renderComparisonForm',\n    value: function renderComparisonForm() {\n      var self = this;\n      if (this.comparisonCard) {\n        this.comparisonCard.outerHTML = '';\n      }\n      this.comparisonCard = this.addCard(null, null, 'unmaterialized');\n      $(this.comparisonCard).append($('#comparison-form-template')[0].innerHTML);\n      $(this.comparisonCard).find('.search').on('keyup', function (e) {\n        if (e.keyCode === 13) {\n          self.renderComparisonRepo(null, self.ghdata.Repo(this.value));\n        }\n      });\n    }\n  }, {\n    key: 'renderBaseRepo',\n    value: function renderBaseRepo(repo) {\n      repo = repo || this.state.repo;\n      $('#main-repo-search').val(repo.owner + '/' + repo.name);\n      var activityCard = this.addCard('Activity', '<strong>' + repo.owner + '/' + repo.name + '</strong>');\n      activityCard.innerHTML += $('#base-template')[0].innerHTML;\n      $(activityCard).find('.linechart').each(function (index, element) {\n        var title = element.dataset.title || element.dataset.source[0].toUpperCase() + element.dataset.source.slice(1);\n        repo[element.dataset.source]().then(function (data) {\n          console.log(data);\n          _GHDataCharts2.default.LineChart(element, data, title);\n        }, function (error) {\n          _GHDataCharts2.default.NoChart(element, title);\n        });\n      });\n      this.renderComparisonForm();\n    }\n  }, {\n    key: 'renderComparisonRepo',\n    value: function renderComparisonRepo(compareRepo, baseRepo) {\n      compareRepo = compareRepo || this.state.repo;\n      var activityComparisonCard = this.addCard('Activity', '<strong>' + compareRepo.owner + '/' + compareRepo.name + '</strong> versus <strong>' + baseRepo.owner + '/' + baseRepo.name + '</strong>');\n      activityComparisonCard.innerHTML += $('#base-template')[0].innerHTML;\n      $(activityComparisonCard).find('.linechart').each(function (index, element) {\n        var title = element.dataset.title || element.dataset.source[0].toUpperCase() + element.dataset.source.slice(1);\n        compareRepo[element.dataset.source].relativeTo(baseRepo).then(function (data) {\n          console.log(data);\n          _GHDataCharts2.default.ComparisonLineChart(element, data, title, baseRepo.owner + '/' + baseRepo.name);\n        }, function (error) {\n          _GHDataCharts2.default.NoChart(element, title);\n        });\n      });\n      this.renderComparisonForm();\n    }\n  }, {\n    key: 'startSearch',\n    value: function startSearch(url) {\n      var $cards = $('#cards');\n      $cards.html('');\n      this.state.repo = this.ghdata.Repo(url);\n      this.renderBaseRepo();\n    }\n  }]);\n\n  return GHDataDashboard;\n}();\n\n$(document).ready(function () {\n\n  $('.reposearch').on('keyup', function (e) {\n    if (e.keyCode === 13) {\n      window.dashboard = new GHDataDashboard();\n      dashboard.startSearch(this.value);\n    }\n  });\n});\n"]}